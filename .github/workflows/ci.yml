name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint-and-test:
    name: Lint & Test (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.13"]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUTF8: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv (fast installer & resolver)
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies (main + dev group via uv)
        run: |
          uv sync --group dev

      - name: Show tool versions
        run: |
          python -V
          uv --version
          ruff --version
          black --version
          pyright --version
          pytest --version

      - name: Lint (black & ruff)
        run: |
          black --check .
          ruff format --check .
          ruff check .

      - name: Type check (pyright)
        run: |
          pyright --pythonversion 3.13

      - name: Run tests with coverage
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python-version }}
          path: coverage.xml

  # build:
  #   name: Build sdist & wheel (Ubuntu / py3.13)
  #   runs-on: ubuntu-latest
  #   needs: [lint-and-test]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.13"

  #     - name: Set up uv
  #       uses: astral-sh/setup-uv@v3

  #     - name: Install build deps
  #       run: |
  #         uv pip install --upgrade build twine

  #     - name: Build
  #       run: |
  #         python -m build

  #     - name: Twine check
  #       run: |
  #         python -m twine check dist/*

  #     - name: Upload dist artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dist
  #         path: dist/**